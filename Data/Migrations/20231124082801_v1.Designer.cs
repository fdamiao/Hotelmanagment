// <auto-generated />
using System;
using Hotelmanagment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotelmanagment.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231124082801_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("HotelManagment.Modelos.Booking", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Adultos")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<int>("Dias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Menores")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("QuartoId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuartosCodigo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Total")
                        .HasColumnType("REAL");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Valorpago")
                        .HasColumnType("REAL");

                    b.Property<double>("VolorApagar")
                        .HasColumnType("REAL");

                    b.HasKey("Codigo");

                    b.HasIndex("QuartosCodigo");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Quartos", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BookingCodigo")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<int>("Desponibilidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fotodoquarto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Nocupantes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nquarto")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<int>("Tipodecamas")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Tipodquarto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Voip")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("tiposdequartoCodigo")
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("BookingCodigo");

                    b.HasIndex("tiposdequartoCodigo");

                    b.ToTable("quartos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.QurtosSuprimetos", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuartosCodigo")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuratosID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SupriId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SuprimentosCodigo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("QuartosCodigo");

                    b.HasIndex("SuprimentosCodigo");

                    b.ToTable("QuartosSuprimetos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.SalaaddSupri", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suprimento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("SalaadedSupris");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Salas", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Fotosaloes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tiposala")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Codigo");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("HotelManagment.Modelos.SalasSuprimetos", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CodSalas")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("QuartosCodigo")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("SalaaddSupriCodigo")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SupriId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SuprimentosCodigo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("QuartosCodigo");

                    b.HasIndex("SalaaddSupriCodigo");

                    b.HasIndex("SuprimentosCodigo");

                    b.ToTable("SalasSuprimetos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Servicos", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Suprimentos", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suprimento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("Suprimentos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Tiposdequarto", b =>
                {
                    b.Property<Guid>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCreat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipodquarto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usercreat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.ToTable("Tiposdequarto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HotelManagment.Modelos.Booking", b =>
                {
                    b.HasOne("HotelManagment.Modelos.Quartos", "Quartos")
                        .WithMany()
                        .HasForeignKey("QuartosCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quartos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Quartos", b =>
                {
                    b.HasOne("HotelManagment.Modelos.Booking", null)
                        .WithMany("ListaQuartos")
                        .HasForeignKey("BookingCodigo");

                    b.HasOne("HotelManagment.Modelos.Tiposdequarto", "tiposdequarto")
                        .WithMany("Quartos")
                        .HasForeignKey("tiposdequartoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tiposdequarto");
                });

            modelBuilder.Entity("HotelManagment.Modelos.QurtosSuprimetos", b =>
                {
                    b.HasOne("HotelManagment.Modelos.Quartos", "Quartos")
                        .WithMany("Suprimetos")
                        .HasForeignKey("QuartosCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Modelos.Suprimentos", "Suprimentos")
                        .WithMany("Suprimetoss")
                        .HasForeignKey("SuprimentosCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quartos");

                    b.Navigation("Suprimentos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.SalasSuprimetos", b =>
                {
                    b.HasOne("HotelManagment.Modelos.Salas", "Quartos")
                        .WithMany("Suprimetoss")
                        .HasForeignKey("QuartosCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagment.Modelos.SalaaddSupri", null)
                        .WithMany("Suprimetoss")
                        .HasForeignKey("SalaaddSupriCodigo");

                    b.HasOne("HotelManagment.Modelos.SalasSuprimetos", "Suprimentos")
                        .WithMany()
                        .HasForeignKey("SuprimentosCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quartos");

                    b.Navigation("Suprimentos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelManagment.Modelos.Booking", b =>
                {
                    b.Navigation("ListaQuartos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Quartos", b =>
                {
                    b.Navigation("Suprimetos");
                });

            modelBuilder.Entity("HotelManagment.Modelos.SalaaddSupri", b =>
                {
                    b.Navigation("Suprimetoss");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Salas", b =>
                {
                    b.Navigation("Suprimetoss");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Suprimentos", b =>
                {
                    b.Navigation("Suprimetoss");
                });

            modelBuilder.Entity("HotelManagment.Modelos.Tiposdequarto", b =>
                {
                    b.Navigation("Quartos");
                });
#pragma warning restore 612, 618
        }
    }
}
